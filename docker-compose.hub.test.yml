version: '3.8'

# TradingAgents-CN v1.0.0-preview Docker Compose配置 - 测试环境
# 使用Docker Hub镜像 + 全新数据卷（用于测试从零部署）
#
# 使用方法：
# 1. 复制.env.example为.env并配置环境变量
# 2. 运行: docker-compose -f docker-compose.hub.test.yml up -d
# 3. 访问: http://localhost:3000 (前端) 和 http://localhost:8000 (后端API)
#
# 注意：
# - 此配置使用 tradingagents_test_* 数据卷名，不会影响现有数据
# - 测试完成后可以删除测试数据卷，或者切换回原数据卷

services:
  # MongoDB数据库
  mongodb:
    image: mongo:4.4
    container_name: tradingagents-mongodb-test
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - tradingagents_test_mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: tradingagents123
      MONGO_INITDB_DATABASE: tradingagents
      TZ: "Asia/Shanghai"
    networks:
      - tradingagents-test-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: tradingagents-redis-test
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - tradingagents_test_redis_data:/data
    environment:
      TZ: "Asia/Shanghai"
    command: redis-server --appendonly yes --requirepass tradingagents123
    networks:
      - tradingagents-test-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "tradingagents123", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  # FastAPI后端服务
  backend:
    image: hsliup/tradingagents-backend:latest
    container_name: tradingagents-backend-test
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      # 日志目录映射 - 使用测试目录
      - ./logs-test:/app/logs
      # 配置目录映射 - 使用测试目录
      - ./config-test:/app/config
      # 数据目录映射 - 使用测试目录
      - ./data-test:/app/data
    env_file:
      - .env
    environment:
      TZ: "Asia/Shanghai"
      # 日志配置
      TRADINGAGENTS_LOG_LEVEL: "INFO"
      TRADINGAGENTS_LOG_DIR: "/app/logs"
      TRADINGAGENTS_LOG_FILE: "/app/logs/tradingagents.log"
      # MongoDB配置（Docker环境，带认证）
      MONGODB_HOST: "mongodb"
      MONGODB_PORT: "27017"
      MONGODB_USERNAME: "admin"
      MONGODB_PASSWORD: "tradingagents123"
      MONGODB_DATABASE: "tradingagents"
      MONGODB_AUTH_SOURCE: "admin"
      MONGODB_URL: "mongodb://admin:tradingagents123@mongodb:27017/tradingagents?authSource=admin"
      # MongoDB连接字符串（用于tradingagents.config.mongodb_storage）
      MONGODB_CONNECTION_STRING: "mongodb://admin:tradingagents123@mongodb:27017/tradingagents?authSource=admin"
      # Redis配置
      REDIS_HOST: "redis"
      REDIS_PORT: "6379"
      REDIS_PASSWORD: "tradingagents123"
      REDIS_URL: "redis://:tradingagents123@redis:6379/0"
      DOCKER_CONTAINER: "true"
      # 安全配置
      JWT_SECRET: "docker-jwt-secret-key-change-in-production-2024"
      JWT_ALGORITHM: "HS256"
      ACCESS_TOKEN_EXPIRE_MINUTES: "480"
      REFRESH_TOKEN_EXPIRE_DAYS: "30"
      CSRF_SECRET: "docker-csrf-secret-key-change-in-production-2024"
      BCRYPT_ROUNDS: "12"
      # CORS配置（允许所有来源，生产环境应该限制为具体域名）
      CORS_ORIGINS: "*"
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - tradingagents-test-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Vue 3前端服务
  frontend:
    image: hsliup/tradingagents-frontend:latest
    container_name: tradingagents-frontend-test
    restart: unless-stopped
    ports:
      - "3000:80"
    environment:
      TZ: "Asia/Shanghai"
      VITE_API_BASE_URL: "http://localhost:8000"
    depends_on:
      - backend
    networks:
      - tradingagents-test-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  tradingagents_test_mongodb_data:
    driver: local
  tradingagents_test_redis_data:
    driver: local

networks:
  tradingagents-test-network:
    driver: bridge

